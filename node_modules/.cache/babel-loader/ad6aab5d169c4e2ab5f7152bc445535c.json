{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"/home/javier/work/urbe/Feldspar-master/src/Components/AddItems/CardListChair.jsx\";\n\nimport React, { Component } from \"react\";\nimport CardList from \"./CardList.jsx\";\nimport { BASE_URL, MODELS, RESOURCES, GET_FREE_RESOURCES, GET_RESOURCES, FIND, CHAIR_CATEGORY } from \"../../Constants.js\";\nimport axios from \"axios\";\nimport { inject, observer } from \"mobx-react\";\nlet CardListChair = (_dec = inject(\"store\"), _dec(_class = observer(_class = class CardListChair extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      itemList: []\n    };\n    this.getUserList = this.getUserList.bind(this);\n    this.getFreeList = this.getFreeList.bind(this);\n    this.clearList = this.clearList.bind(this);\n  }\n\n  clearList() {\n    if (this.state.isLoggedIn === false) {\n      this.setState({\n        itemList: []\n      });\n    }\n  }\n\n  getUserList() {\n    if (this.state.isLoggedIn) {\n      let furnitureCategory = {\n        category: CHAIR_CATEGORY\n      };\n      let token = this.props.store.getAccessToken;\n      let config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      axios.post(BASE_URL + RESOURCES + GET_RESOURCES, furnitureCategory, config).then(res => {\n        let itemListTemp = res.data;\n        Promise.all(itemListTemp.map(async modelId => {\n          let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\n          let temp = [...this.state.itemList];\n          temp.push(res.data);\n          this.setState({\n            itemList: temp\n          });\n          return res.data;\n        }));\n      });\n    }\n  }\n\n  getFreeList() {\n    if (!this.state.isLoggedIn) {\n      let furnitureCategory = {\n        category: CHAIR_CATEGORY\n      };\n      axios.post(BASE_URL + RESOURCES + GET_FREE_RESOURCES, furnitureCategory).then(res => {\n        let itemListTemp = res.data;\n        Promise.all(itemListTemp.map(async modelId => {\n          let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\n          let temp = [...this.state.itemList];\n          temp.push(res.data);\n          this.setState({\n            itemList: temp\n          });\n          return res.data;\n        }));\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getFreeList();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapShot) {\n    if (this.props.store.obtenerInicioDeSesion && prevState.isLoggedIn === false) {\n      this.setState({\n        isLoggedIn: true\n      });\n      this.clearList();\n      this.getUserList();\n    }\n\n    if (this.props.store.obtenerInicioDeSesion === false && prevState.isLoggedIn) {\n      this.setState({\n        isLoggedIn: false\n      });\n      this.clearList();\n      this.getFreeList();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      itemList: this.state.itemList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}) || _class) || _class);\nexport default CardListChair;","map":{"version":3,"sources":["/home/javier/work/urbe/Feldspar-master/src/Components/AddItems/CardListChair.jsx"],"names":["React","Component","CardList","BASE_URL","MODELS","RESOURCES","GET_FREE_RESOURCES","GET_RESOURCES","FIND","CHAIR_CATEGORY","axios","inject","observer","CardListChair","constructor","props","state","isLoggedIn","itemList","getUserList","bind","getFreeList","clearList","setState","furnitureCategory","category","token","store","getAccessToken","config","headers","Authorization","post","then","res","itemListTemp","data","Promise","all","map","modelId","get","temp","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapShot","obtenerInicioDeSesion","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CardList from \"./CardList.jsx\";\nimport {\n  BASE_URL,\n  MODELS,\n  RESOURCES,\n  GET_FREE_RESOURCES,\n  GET_RESOURCES,\n  FIND,\n  CHAIR_CATEGORY,\n} from \"../../Constants.js\";\nimport axios from \"axios\";\nimport { inject, observer } from \"mobx-react\";\n\n@inject(\"store\")\n@observer\nclass CardListChair extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      itemList: [],\n    };\n    this.getUserList = this.getUserList.bind(this);\n    this.getFreeList = this.getFreeList.bind(this);\n    this.clearList = this.clearList.bind(this);\n  }\n\n  clearList() {\n    if (this.state.isLoggedIn === false) {\n      this.setState({\n        itemList: [],\n      });\n    }\n  }\n\n  getUserList() {\n    if (this.state.isLoggedIn) {\n      let furnitureCategory = { category: CHAIR_CATEGORY };\n      let token = this.props.store.getAccessToken;\n      let config = {\n        headers: { Authorization: `Bearer ${token}` },\n      };\n\n      axios\n        .post(BASE_URL + RESOURCES + GET_RESOURCES, furnitureCategory, config)\n        .then((res) => {\n          let itemListTemp = res.data;\n          Promise.all(\n            itemListTemp.map(async (modelId) => {\n              let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\n              let temp = [...this.state.itemList];\n              temp.push(res.data);\n              this.setState({ itemList: temp });\n              return res.data;\n            })\n          );\n        });\n    }\n  }\n\n  getFreeList() {\n    if (!this.state.isLoggedIn) {\n      let furnitureCategory = { category: CHAIR_CATEGORY };\n\n      axios\n        .post(BASE_URL + RESOURCES + GET_FREE_RESOURCES, furnitureCategory)\n        .then((res) => {\n          let itemListTemp = res.data;\n          Promise.all(\n            itemListTemp.map(async (modelId) => {\n              let res = await axios.get(BASE_URL + MODELS + FIND + modelId);\n              let temp = [...this.state.itemList];\n              temp.push(res.data);\n              this.setState({ itemList: temp });\n              return res.data;\n            })\n          );\n        });\n    }\n  }\n\n  componentDidMount() {\n    this.getFreeList();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapShot) {\n    if (this.props.store.obtenerInicioDeSesion && prevState.isLoggedIn === false) {\n      this.setState({ isLoggedIn: true });\n      this.clearList();\n      this.getUserList();\n    }\n    if (this.props.store.obtenerInicioDeSesion === false && prevState.isLoggedIn) {\n      this.setState({ isLoggedIn: false });\n      this.clearList();\n      this.getFreeList();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <CardList itemList={this.state.itemList} />\n      </div>\n    );\n  }\n}\n\nexport default CardListChair;\n"]},"metadata":{},"sourceType":"module"}