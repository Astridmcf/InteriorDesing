{"ast":null,"code":"var _jsxFileName = \"/home/javier/work/urbe/Feldspar-master/src/Components/AuthRoute/AuthRoute.jsx\";\nimport PropTypes from 'prop-types';\nimport TopBar from \"../TopBar/TopBar.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport Loading from '../Loading/Loading.jsx';\n\nclass AuthRoute extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nodeShouldBeRender: /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }\n      }),\n      isTopBarRender: false\n    };\n\n    this.handleAuth = () => {\n      setTimeout(() => {\n        if (this.props.isAuth) {\n          this.setState({\n            isTopBarRender: true,\n            nodeShouldBeRender: this.props.component\n          });\n        } else {\n          this.setState({\n            isTopBarRender: false,\n            nodeShouldBeRender: this.props.component\n          });\n        }\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.handleAuth();\n  }\n\n  render() {\n    const {\n      path\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.isTopBarRender ? /*#__PURE__*/React.createElement(TopBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }) : undefined, /*#__PURE__*/React.createElement(Route, {\n      path: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, nodeShouldBeRender));\n  }\n\n}\n\nAuthRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  component: PropTypes.node.isRequired\n};\nexport default AuthRoute;","map":{"version":3,"sources":["/home/javier/work/urbe/Feldspar-master/src/Components/AuthRoute/AuthRoute.jsx"],"names":["PropTypes","TopBar","React","Component","Route","Loading","AuthRoute","state","nodeShouldBeRender","isTopBarRender","handleAuth","setTimeout","props","isAuth","setState","component","componentDidMount","render","path","width","height","undefined","propTypes","bool","isRequired","string","node"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAOhCI,KAPgC,GAOxB;AACNC,MAAAA,kBAAkB,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADd;AAENC,MAAAA,cAAc,EAAE;AAFV,KAPwB;;AAAA,SAYhCC,UAZgC,GAYnB,MAAM;AACjBC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,eAAKC,QAAL,CAAc;AACZL,YAAAA,cAAc,EAAE,IADJ;AAEZD,YAAAA,kBAAkB,EAAE,KAAKI,KAAL,CAAWG;AAFnB,WAAd;AAID,SALD,MAKO;AACL,eAAKD,QAAL,CAAc;AACZL,YAAAA,cAAc,EAAE,KADJ;AAEZD,YAAAA,kBAAkB,EAAE,KAAKI,KAAL,CAAWG;AAFnB,WAAd;AAID;AACF,OAZS,EAYP,IAZO,CAAV;AAaD,KA1B+B;AAAA;;AA4BhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,UAAL;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKN,KAAtB;AAEA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKX,cAAL,gBAAsB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAmCY,SAFvC,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEH,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIV,kBADJ,CAJF,CADF;AAUD;;AA7C+B;;AAA5BF,S,CACGgB,S,GAAY;AACjBT,EAAAA,MAAM,EAAEb,SAAS,CAACuB,IAAV,CAAeC,UADN;AAEjBN,EAAAA,IAAI,EAAElB,SAAS,CAACyB,MAAV,CAAiBD,UAFN;AAGjBT,EAAAA,SAAS,EAAEf,SAAS,CAAC0B,IAAV,CAAeF;AAHT,C;AA+CrB,eAAelB,SAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport TopBar from \"../TopBar/TopBar.jsx\";\nimport React, { Component } from 'react'\nimport { Route } from \"react-router-dom\";\nimport Loading from '../Loading/Loading.jsx';\n\nclass AuthRoute extends Component {\n  static propTypes = {\n    isAuth: PropTypes.bool.isRequired,\n    path: PropTypes.string.isRequired,\n    component: PropTypes.node.isRequired,\n  }\n\n  state = {\n    nodeShouldBeRender: <Loading />,\n    isTopBarRender: false\n  }\n\n  handleAuth = () => {\n    setTimeout(() => {\n      if (this.props.isAuth) {\n        this.setState({\n          isTopBarRender: true,\n          nodeShouldBeRender: this.props.component\n        })\n      } else {\n        this.setState({\n          isTopBarRender: false,\n          nodeShouldBeRender: this.props.component\n        })\n      }\n    }, 1000)\n  }\n\n  componentDidMount() {\n    this.handleAuth();\n  }\n\n  render() {\n    const { path } = this.props;\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {\n          this.isTopBarRender ? <TopBar /> : undefined\n        }\n        <Route path={path}>\n          { nodeShouldBeRender }\n        </Route>\n      </div>\n    )\n  }\n}\n\nexport default AuthRoute;\n"]},"metadata":{},"sourceType":"module"}